node {
  name: "Encoder/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
        dim {
          size: 4659
        }
      }
    }
  }
}
node {
  name: "Encoder/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
        dim {
          size: 1903
        }
      }
    }
  }
}
node {
  name: "Encoder/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 1
        }
        dim {
          size: 2197
        }
      }
    }
  }
}
node {
  name: "Encoder/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Encoder/Sum"
  op: "Sum"
  input: "Encoder/Placeholder"
  input: "Encoder/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/count_nonzero/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/count_nonzero/NotEqual"
  op: "NotEqual"
  input: "Encoder/Sum"
  input: "Encoder/count_nonzero/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/count_nonzero/ToInt64"
  op: "Cast"
  input: "Encoder/count_nonzero/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Encoder/count_nonzero/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Encoder/count_nonzero/Sum"
  op: "Sum"
  input: "Encoder/count_nonzero/ToInt64"
  input: "Encoder/count_nonzero/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Encoder/NotEqual"
  op: "NotEqual"
  input: "Encoder/count_nonzero/Sum"
  input: "Encoder/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Encoder/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Encoder/Sum_1"
  op: "Sum"
  input: "Encoder/Placeholder_1"
  input: "Encoder/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/count_nonzero_1/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/count_nonzero_1/NotEqual"
  op: "NotEqual"
  input: "Encoder/Sum_1"
  input: "Encoder/count_nonzero_1/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/count_nonzero_1/ToInt64"
  op: "Cast"
  input: "Encoder/count_nonzero_1/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Encoder/count_nonzero_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Encoder/count_nonzero_1/Sum"
  op: "Sum"
  input: "Encoder/count_nonzero_1/ToInt64"
  input: "Encoder/count_nonzero_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/NotEqual_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Encoder/NotEqual_1"
  op: "NotEqual"
  input: "Encoder/count_nonzero_1/Sum"
  input: "Encoder/NotEqual_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Encoder/Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Encoder/Sum_2"
  op: "Sum"
  input: "Encoder/Placeholder_2"
  input: "Encoder/Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/count_nonzero_2/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/count_nonzero_2/NotEqual"
  op: "NotEqual"
  input: "Encoder/Sum_2"
  input: "Encoder/count_nonzero_2/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/count_nonzero_2/ToInt64"
  op: "Cast"
  input: "Encoder/count_nonzero_2/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Encoder/count_nonzero_2/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Encoder/count_nonzero_2/Sum"
  op: "Sum"
  input: "Encoder/count_nonzero_2/ToInt64"
  input: "Encoder/count_nonzero_2/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/NotEqual_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Encoder/NotEqual_2"
  op: "NotEqual"
  input: "Encoder/count_nonzero_2/Sum"
  input: "Encoder/NotEqual_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Encoder/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320507764816284
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320507764816284
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/max"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/RandomUniform"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/mul"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
}
node {
  name: "Encoder/apicalls/sigma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/Assign"
  op: "Assign"
  input: "Encoder/apicalls/sigma"
  input: "Encoder/apicalls/sigma/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/apicalls/sigma/read"
  op: "Identity"
  input: "Encoder/apicalls/sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/apicalls/sigma"
      }
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320507764816284
      }
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320507764816284
      }
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/types/sigma/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/types/sigma/Initializer/random_uniform/max"
  input: "Encoder/types/sigma/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/types/sigma/Initializer/random_uniform/RandomUniform"
  input: "Encoder/types/sigma/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
}
node {
  name: "Encoder/types/sigma/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/types/sigma/Initializer/random_uniform/mul"
  input: "Encoder/types/sigma/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
}
node {
  name: "Encoder/types/sigma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/types/sigma/Assign"
  op: "Assign"
  input: "Encoder/types/sigma"
  input: "Encoder/types/sigma/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/types/sigma/read"
  op: "Identity"
  input: "Encoder/types/sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/types/sigma"
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320507764816284
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320507764816284
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/max"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/RandomUniform"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/mul"
  input: "Encoder/keywords/sigma/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
}
node {
  name: "Encoder/keywords/sigma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/keywords/sigma/Assign"
  op: "Assign"
  input: "Encoder/keywords/sigma"
  input: "Encoder/keywords/sigma/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/keywords/sigma/read"
  op: "Identity"
  input: "Encoder/keywords/sigma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/keywords/sigma"
      }
    }
  }
}
node {
  name: "Encoder/Square"
  op: "Square"
  input: "Encoder/apicalls/sigma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/truediv"
  op: "RealDiv"
  input: "Encoder/truediv/x"
  input: "Encoder/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Tile/input"
  op: "Pack"
  input: "Encoder/truediv"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "Encoder/Tile"
  op: "Tile"
  input: "Encoder/Tile/input"
  input: "Encoder/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Select"
  op: "Select"
  input: "Encoder/NotEqual"
  input: "Encoder/Tile"
  input: "Encoder/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Square_1"
  op: "Square"
  input: "Encoder/types/sigma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/truediv_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/truediv_1"
  op: "RealDiv"
  input: "Encoder/truediv_1/x"
  input: "Encoder/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Tile_1/input"
  op: "Pack"
  input: "Encoder/truediv_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Tile_1/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "Encoder/Tile_1"
  op: "Tile"
  input: "Encoder/Tile_1/input"
  input: "Encoder/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Select_1"
  op: "Select"
  input: "Encoder/NotEqual_1"
  input: "Encoder/Tile_1"
  input: "Encoder/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Square_2"
  op: "Square"
  input: "Encoder/keywords/sigma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/truediv_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/truediv_2"
  op: "RealDiv"
  input: "Encoder/truediv_2/x"
  input: "Encoder/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Tile_2/input"
  op: "Pack"
  input: "Encoder/truediv_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Tile_2/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "Encoder/Tile_2"
  op: "Tile"
  input: "Encoder/Tile_2/input"
  input: "Encoder/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/Select_2"
  op: "Select"
  input: "Encoder/NotEqual_2"
  input: "Encoder/Tile_2"
  input: "Encoder/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/stack"
  op: "Pack"
  input: "Encoder/Select"
  input: "Encoder/Select_1"
  input: "Encoder/Select_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Encoder/Sum_3"
  op: "Sum"
  input: "Encoder/stack"
  input: "Encoder/Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/add"
  op: "Add"
  input: "Encoder/add/x"
  input: "Encoder/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Reshape"
  op: "Reshape"
  input: "Encoder/add"
  input: "Encoder/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/Tile_3/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/Tile_3"
  op: "Tile"
  input: "Encoder/Reshape"
  input: "Encoder/Tile_3/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/mean/apicalls/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "2\000\000\000\001\000\000\0003\022\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/Slice"
  op: "Slice"
  input: "Encoder/Placeholder"
  input: "Encoder/mean/apicalls/Slice/begin"
  input: "Encoder/mean/apicalls/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/apicalls/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\3773\022\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/Reshape"
  op: "Reshape"
  input: "Encoder/mean/apicalls/Slice"
  input: "Encoder/mean/apicalls/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "3\022\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03564237803220749
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03564237803220749
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/max"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/mul"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4659
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/Assign"
  op: "Assign"
  input: "Encoder/mean/apicalls/dense/kernel"
  input: "Encoder/mean/apicalls/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/kernel/read"
  op: "Identity"
  input: "Encoder/mean/apicalls/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/bias/Assign"
  op: "Assign"
  input: "Encoder/mean/apicalls/dense/bias"
  input: "Encoder/mean/apicalls/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/bias/read"
  op: "Identity"
  input: "Encoder/mean/apicalls/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/dense/bias"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/MatMul"
  op: "MatMul"
  input: "Encoder/mean/apicalls/Reshape"
  input: "Encoder/mean/apicalls/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/BiasAdd"
  op: "BiasAdd"
  input: "Encoder/mean/apicalls/dense/MatMul"
  input: "Encoder/mean/apicalls/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/mean/apicalls/dense/Tanh"
  op: "Tanh"
  input: "Encoder/mean/apicalls/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/max"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/mul"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/Assign"
  op: "Assign"
  input: "Encoder/mean/apicalls/w"
  input: "Encoder/mean/apicalls/w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/apicalls/w/read"
  op: "Identity"
  input: "Encoder/mean/apicalls/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/max"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/mul"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/Assign"
  op: "Assign"
  input: "Encoder/mean/apicalls/b"
  input: "Encoder/mean/apicalls/b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/apicalls/b/read"
  op: "Identity"
  input: "Encoder/mean/apicalls/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/apicalls/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/apicalls/xw_plus_b/MatMul"
  op: "MatMul"
  input: "Encoder/mean/apicalls/dense/Tanh"
  input: "Encoder/mean/apicalls/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/apicalls/xw_plus_b"
  op: "BiasAdd"
  input: "Encoder/mean/apicalls/xw_plus_b/MatMul"
  input: "Encoder/mean/apicalls/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/mean/apicalls/add"
  op: "Add"
  input: "Encoder/mean/apicalls/zeros"
  input: "Encoder/mean/apicalls/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/types/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/mean/types/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000o\007\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/Slice"
  op: "Slice"
  input: "Encoder/Placeholder_1"
  input: "Encoder/mean/types/Slice/begin"
  input: "Encoder/mean/types/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/types/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377o\007\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/Reshape"
  op: "Reshape"
  input: "Encoder/mean/types/Slice"
  input: "Encoder/mean/types/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "o\007\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0552297979593277
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0552297979593277
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/max"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/mul"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1903
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/Assign"
  op: "Assign"
  input: "Encoder/mean/types/dense/kernel"
  input: "Encoder/mean/types/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/types/dense/kernel/read"
  op: "Identity"
  input: "Encoder/mean/types/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/types/dense/bias/Assign"
  op: "Assign"
  input: "Encoder/mean/types/dense/bias"
  input: "Encoder/mean/types/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/types/dense/bias/read"
  op: "Identity"
  input: "Encoder/mean/types/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/dense/bias"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/dense/MatMul"
  op: "MatMul"
  input: "Encoder/mean/types/Reshape"
  input: "Encoder/mean/types/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/types/dense/BiasAdd"
  op: "BiasAdd"
  input: "Encoder/mean/types/dense/MatMul"
  input: "Encoder/mean/types/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/mean/types/dense/Tanh"
  op: "Tanh"
  input: "Encoder/mean/types/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/types/w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/types/w/Initializer/random_uniform/max"
  input: "Encoder/mean/types/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/types/w/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/types/w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/w/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/types/w/Initializer/random_uniform/mul"
  input: "Encoder/mean/types/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/types/w/Assign"
  op: "Assign"
  input: "Encoder/mean/types/w"
  input: "Encoder/mean/types/w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/types/w/read"
  op: "Identity"
  input: "Encoder/mean/types/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/types/b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/types/b/Initializer/random_uniform/max"
  input: "Encoder/mean/types/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/types/b/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/types/b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/types/b/Initializer/random_uniform/mul"
  input: "Encoder/mean/types/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/types/b/Assign"
  op: "Assign"
  input: "Encoder/mean/types/b"
  input: "Encoder/mean/types/b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/types/b/read"
  op: "Identity"
  input: "Encoder/mean/types/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/types/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/types/xw_plus_b/MatMul"
  op: "MatMul"
  input: "Encoder/mean/types/dense/Tanh"
  input: "Encoder/mean/types/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/types/xw_plus_b"
  op: "BiasAdd"
  input: "Encoder/mean/types/xw_plus_b/MatMul"
  input: "Encoder/mean/types/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/mean/types/add"
  op: "Add"
  input: "Encoder/mean/types/zeros"
  input: "Encoder/mean/types/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/keywords/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000\225\010\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/Slice"
  op: "Slice"
  input: "Encoder/Placeholder_2"
  input: "Encoder/mean/keywords/Slice/begin"
  input: "Encoder/mean/keywords/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/keywords/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\225\010\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/Reshape"
  op: "Reshape"
  input: "Encoder/mean/keywords/Slice"
  input: "Encoder/mean/keywords/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\225\010\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05151400715112686
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05151400715112686
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/max"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/mul"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2197
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/Assign"
  op: "Assign"
  input: "Encoder/mean/keywords/dense/kernel"
  input: "Encoder/mean/keywords/dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/kernel/read"
  op: "Identity"
  input: "Encoder/mean/keywords/dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/kernel"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/bias/Assign"
  op: "Assign"
  input: "Encoder/mean/keywords/dense/bias"
  input: "Encoder/mean/keywords/dense/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/bias/read"
  op: "Identity"
  input: "Encoder/mean/keywords/dense/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/dense/bias"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/MatMul"
  op: "MatMul"
  input: "Encoder/mean/keywords/Reshape"
  input: "Encoder/mean/keywords/dense/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/BiasAdd"
  op: "BiasAdd"
  input: "Encoder/mean/keywords/dense/MatMul"
  input: "Encoder/mean/keywords/dense/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/mean/keywords/dense/Tanh"
  op: "Tanh"
  input: "Encoder/mean/keywords/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/max"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/mul"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/Assign"
  op: "Assign"
  input: "Encoder/mean/keywords/w"
  input: "Encoder/mean/keywords/w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/keywords/w/read"
  op: "Identity"
  input: "Encoder/mean/keywords/w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/w"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/max"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/RandomUniform"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Initializer/random_uniform"
  op: "Add"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/mul"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/Assign"
  op: "Assign"
  input: "Encoder/mean/keywords/b"
  input: "Encoder/mean/keywords/b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Encoder/mean/keywords/b/read"
  op: "Identity"
  input: "Encoder/mean/keywords/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Encoder/mean/keywords/b"
      }
    }
  }
}
node {
  name: "Encoder/mean/keywords/xw_plus_b/MatMul"
  op: "MatMul"
  input: "Encoder/mean/keywords/dense/Tanh"
  input: "Encoder/mean/keywords/w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/keywords/xw_plus_b"
  op: "BiasAdd"
  input: "Encoder/mean/keywords/xw_plus_b/MatMul"
  input: "Encoder/mean/keywords/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Encoder/mean/keywords/add"
  op: "Add"
  input: "Encoder/mean/keywords/zeros"
  input: "Encoder/mean/keywords/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/Square"
  op: "Square"
  input: "Encoder/apicalls/sigma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/truediv"
  op: "RealDiv"
  input: "Encoder/mean/apicalls/add"
  input: "Encoder/mean/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/Square_1"
  op: "Square"
  input: "Encoder/types/sigma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/truediv_1"
  op: "RealDiv"
  input: "Encoder/mean/types/add"
  input: "Encoder/mean/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/Square_2"
  op: "Square"
  input: "Encoder/keywords/sigma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/truediv_2"
  op: "RealDiv"
  input: "Encoder/mean/keywords/add"
  input: "Encoder/mean/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/Select"
  op: "Select"
  input: "Encoder/NotEqual"
  input: "Encoder/mean/truediv"
  input: "Encoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/Select_1"
  op: "Select"
  input: "Encoder/NotEqual_1"
  input: "Encoder/mean/truediv_1"
  input: "Encoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/Select_2"
  op: "Select"
  input: "Encoder/NotEqual_2"
  input: "Encoder/mean/truediv_2"
  input: "Encoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mean/stack"
  op: "Pack"
  input: "Encoder/mean/Select"
  input: "Encoder/mean/Select_1"
  input: "Encoder/mean/Select_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/mean/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Encoder/mean/Sum"
  op: "Sum"
  input: "Encoder/mean/stack"
  input: "Encoder/mean/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Encoder/mean/truediv_3"
  op: "RealDiv"
  input: "Encoder/mean/Sum"
  input: "Encoder/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/covariance/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/covariance/truediv"
  op: "RealDiv"
  input: "Encoder/covariance/ones"
  input: "Encoder/Tile_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/random_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Encoder/random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Encoder/random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Encoder/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "Encoder/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Encoder/random_normal/mul"
  op: "Mul"
  input: "Encoder/random_normal/RandomStandardNormal"
  input: "Encoder/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/random_normal"
  op: "Add"
  input: "Encoder/random_normal/mul"
  input: "Encoder/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/Sqrt"
  op: "Sqrt"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/mul"
  op: "Mul"
  input: "Encoder/Sqrt"
  input: "Encoder/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Encoder/add_1"
  op: "Add"
  input: "Encoder/mean/truediv_3"
  input: "Encoder/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\351\'\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.024082988500595093
      }
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.024082988500595093
      }
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Embedding/emb/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Embedding/emb/Initializer/random_uniform/max"
  input: "Embedding/emb/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Embedding/emb/Initializer/random_uniform/RandomUniform"
  input: "Embedding/emb/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
}
node {
  name: "Embedding/emb/Initializer/random_uniform"
  op: "Add"
  input: "Embedding/emb/Initializer/random_uniform/mul"
  input: "Embedding/emb/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
}
node {
  name: "Embedding/emb"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10217
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Embedding/emb/Assign"
  op: "Assign"
  input: "Embedding/emb"
  input: "Embedding/emb/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Embedding/emb/read"
  op: "Identity"
  input: "Embedding/emb"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/TruncatedNormal"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/node0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/node1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/node2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/node3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/edge0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/edge1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/edge2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/edge3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.3061862289905548
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3061862289905548
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_w/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_w"
  op: "HistogramSummary"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_w/tag"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_b/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_b"
  op: "HistogramSummary"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_b/tag"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/node0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge0"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge0"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_1"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/node1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_2"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_2"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/node2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_4"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_3"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/node3"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_7"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/TruncatedNormal"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/node0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/node1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/node2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/node3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/edge0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/edge1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/edge2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/edge3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2156655490398407
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2156655490398407
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320507764816284
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320507764816284
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_w/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_w"
  op: "HistogramSummary"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_w/tag"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_b/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_b"
  op: "HistogramSummary"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_b/tag"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/node0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge0"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge0"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_1"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/node1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_2"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_2"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/node2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_4"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_3"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/node3"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  op: "Split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/embedding_lookup_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  op: "Sub"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_7"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b"
  op: "BiasAdd"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Square"
  op: "Square"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/add"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/add/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile"
  op: "Tile"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/add"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/truediv"
  op: "RealDiv"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/ones"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/random_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "Reverse_Encoder/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Reverse_Encoder/random_normal/mul"
  op: "Mul"
  input: "Reverse_Encoder/random_normal/RandomStandardNormal"
  input: "Reverse_Encoder/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/random_normal"
  op: "Add"
  input: "Reverse_Encoder/random_normal/mul"
  input: "Reverse_Encoder/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/Sqrt"
  op: "Sqrt"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/mul"
  op: "Mul"
  input: "Reverse_Encoder/Sqrt"
  input: "Reverse_Encoder/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reverse_Encoder/add"
  op: "Add"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b"
  input: "Reverse_Encoder/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19364917278289795
      }
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19364917278289795
      }
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/lift_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/lift_w/Initializer/random_uniform/max"
  input: "Decoder/lift_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/lift_w/Initializer/random_uniform/RandomUniform"
  input: "Decoder/lift_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
}
node {
  name: "Decoder/lift_w/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/lift_w/Initializer/random_uniform/mul"
  input: "Decoder/lift_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
}
node {
  name: "Decoder/lift_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/lift_w/Assign"
  op: "Assign"
  input: "Decoder/lift_w"
  input: "Decoder/lift_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/lift_w/read"
  op: "Identity"
  input: "Decoder/lift_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_w"
      }
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/lift_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/lift_b/Initializer/random_uniform/max"
  input: "Decoder/lift_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/lift_b/Initializer/random_uniform/RandomUniform"
  input: "Decoder/lift_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
}
node {
  name: "Decoder/lift_b/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/lift_b/Initializer/random_uniform/mul"
  input: "Decoder/lift_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
}
node {
  name: "Decoder/lift_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/lift_b/Assign"
  op: "Assign"
  input: "Decoder/lift_b"
  input: "Decoder/lift_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/lift_b/read"
  op: "Identity"
  input: "Decoder/lift_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/lift_b"
      }
    }
  }
}
node {
  name: "Decoder/Initial_State/MatMul"
  op: "MatMul"
  input: "Encoder/add_1"
  input: "Decoder/lift_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/Initial_State"
  op: "BiasAdd"
  input: "Decoder/Initial_State/MatMul"
  input: "Decoder/lift_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/node0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/node1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/node2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/node3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/edge0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/edge1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/edge2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/edge3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\351\'\000\000"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.024082988500595093
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.024082988500595093
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/max"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/RandomUniform"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/mul"
  input: "Decoder/projections/projection_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 10217
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/projections/projection_w/Assign"
  op: "Assign"
  input: "Decoder/projections/projection_w"
  input: "Decoder/projections/projection_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/projections/projection_w/read"
  op: "Identity"
  input: "Decoder/projections/projection_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_w"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10217
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.017135584726929665
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.017135584726929665
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/max"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/RandomUniform"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/mul"
  input: "Decoder/projections/projection_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10217
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/projections/projection_b/Assign"
  op: "Assign"
  input: "Decoder/projections/projection_b"
  input: "Decoder/projections/projection_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/projections/projection_b/read"
  op: "Identity"
  input: "Decoder/projections/projection_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/projections/projection_b"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Decoder/projections/projection_w_1"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_w_1"
  op: "HistogramSummary"
  input: "Decoder/projections/projection_w_1/tag"
  input: "Decoder/projections/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/projections/projection_b_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Decoder/projections/projection_b_1"
      }
    }
  }
}
node {
  name: "Decoder/projections/projection_b_1"
  op: "HistogramSummary"
  input: "Decoder/projections/projection_b_1/tag"
  input: "Decoder/projections/projection_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/embedding_lookup"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Decoder/node0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup"
  input: "Decoder/Initial_State"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "Decoder/Initial_State"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "Decoder/Initial_State"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup"
  input: "Decoder/Initial_State"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "Decoder/Initial_State"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "Decoder/Initial_State"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select"
  op: "Select"
  input: "Decoder/edge0"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_1"
  op: "Select"
  input: "Decoder/edge0"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/embedding_lookup_1"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Decoder/node1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_1"
  input: "Decoder/decoder_network/rnn/Select_1"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "Decoder/decoder_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_1"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "Decoder/decoder_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_1"
  input: "Decoder/decoder_network/rnn/Select_1"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "Decoder/decoder_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_1"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "Decoder/decoder_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1/x"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_2"
  op: "Select"
  input: "Decoder/edge1"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_3"
  op: "Select"
  input: "Decoder/edge1"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/embedding_lookup_2"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Decoder/node2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_2"
  input: "Decoder/decoder_network/rnn/Select_3"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "Decoder/decoder_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_2"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "Decoder/decoder_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_2"
  input: "Decoder/decoder_network/rnn/Select_3"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "Decoder/decoder_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_2"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "Decoder/decoder_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2/x"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_4"
  op: "Select"
  input: "Decoder/edge2"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_5"
  op: "Select"
  input: "Decoder/edge2"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/embedding_lookup_3"
  op: "Gather"
  input: "Embedding/emb/read"
  input: "Decoder/node3"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Embedding/emb"
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_3"
  input: "Decoder/decoder_network/rnn/Select_5"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "Decoder/decoder_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_3"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "Decoder/decoder_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_3"
  input: "Decoder/decoder_network/rnn/Select_5"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  op: "Split"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "Decoder/decoder_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/embedding_lookup_3"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul"
  input: "Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "Decoder/decoder_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  op: "Sub"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3/x"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  op: "Mul"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  op: "Add"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_6"
  op: "Select"
  input: "Decoder/edge3"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Decoder/decoder_network/rnn/Select_7"
  op: "Select"
  input: "Decoder/edge3"
  input: "Decoder/decoder_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  input: "Decoder/decoder_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Targets"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "Loss/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/concat"
  op: "ConcatV2"
  input: "Decoder/decoder_network/rnn/Select"
  input: "Decoder/decoder_network/rnn/Select_2"
  input: "Decoder/decoder_network/rnn/Select_4"
  input: "Decoder/decoder_network/rnn/Select_6"
  input: "Loss/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "Loss/Reshape"
  op: "Reshape"
  input: "Loss/concat"
  input: "Loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss/MatMul"
  op: "MatMul"
  input: "Loss/Reshape"
  input: "Decoder/projections/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Loss/add"
  op: "Add"
  input: "Loss/MatMul"
  input: "Decoder/projections/projection_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/LogSoftmax"
  op: "LogSoftmax"
  input: "Loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Loss/Reshape_1"
  op: "Reshape"
  input: "Targets"
  input: "Loss/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss/ones"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/Reshape"
  op: "Reshape"
  input: "Loss/Reshape_1"
  input: "Loss/sequence_loss/sequence_loss_by_example/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Loss/add"
  input: "Loss/sequence_loss/sequence_loss_by_example/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/mul"
  op: "Mul"
  input: "Loss/sequence_loss/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Loss/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/add"
  op: "Add"
  input: "Loss/ones"
  input: "Loss/sequence_loss/sequence_loss_by_example/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/sequence_loss/sequence_loss_by_example/truediv"
  op: "RealDiv"
  input: "Loss/sequence_loss/sequence_loss_by_example/mul"
  input: "Loss/sequence_loss/sequence_loss_by_example/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/sequence_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/Sum"
  op: "Sum"
  input: "Loss/sequence_loss/sequence_loss_by_example/truediv"
  input: "Loss/sequence_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss/sequence_loss/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/sequence_loss/strided_slice"
  op: "StridedSlice"
  input: "Loss/sequence_loss/Shape"
  input: "Loss/sequence_loss/strided_slice/stack"
  input: "Loss/sequence_loss/strided_slice/stack_1"
  input: "Loss/sequence_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Loss/sequence_loss/Cast"
  op: "Cast"
  input: "Loss/sequence_loss/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Loss/sequence_loss/truediv"
  op: "RealDiv"
  input: "Loss/sequence_loss/Sum"
  input: "Loss/sequence_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/Log"
  op: "Log"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/Log_1"
  op: "Log"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/sub"
  op: "Sub"
  input: "Loss/Log"
  input: "Loss/Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Loss/sub_1"
  op: "Sub"
  input: "Loss/sub"
  input: "Loss/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/truediv"
  op: "RealDiv"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truediv"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/add_1"
  op: "Add"
  input: "Loss/sub_1"
  input: "Loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/sub_2"
  op: "Sub"
  input: "Encoder/mean/truediv_3"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/Square"
  op: "Square"
  input: "Loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/truediv_1"
  op: "RealDiv"
  input: "Loss/Square"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/add_2"
  op: "Add"
  input: "Loss/add_1"
  input: "Loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Loss/Mean"
  op: "Mean"
  input: "Loss/add_2"
  input: "Loss/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Loss/mul"
  op: "Mul"
  input: "Loss/mul/x"
  input: "Loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Loss/Mean_1"
  op: "Mean"
  input: "Loss/mul"
  input: "Loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Loss/loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Loss/loss"
      }
    }
  }
}
node {
  name: "Loss/loss"
  op: "ScalarSummary"
  input: "Loss/loss/tags"
  input: "Loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/gen_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Loss/gen_loss"
      }
    }
  }
}
node {
  name: "Loss/gen_loss"
  op: "ScalarSummary"
  input: "Loss/gen_loss/tags"
  input: "Loss/sequence_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Loss/KL_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Loss/KL_loss"
      }
    }
  }
}
node {
  name: "Loss/KL_loss"
  op: "ScalarSummary"
  input: "Loss/KL_loss/tags"
  input: "Loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/Loss/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/Loss/Mean_1_grad/Reshape"
  input: "train/gradients/Loss/Mean_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Prod"
  op: "Prod"
  input: "train/gradients/Loss/Mean_1_grad/Shape"
  input: "train/gradients/Loss/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/Loss/Mean_1_grad/Shape_1"
  input: "train/gradients/Loss/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/Loss/Mean_1_grad/Prod_1"
  input: "train/gradients/Loss/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/Loss/Mean_1_grad/Prod"
  input: "train/gradients/Loss/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/Cast"
  op: "Cast"
  input: "train/gradients/Loss/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/Loss/Mean_1_grad/Tile"
  input: "train/gradients/Loss/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/mul_grad/Shape"
  input: "train/gradients/Loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Loss/Mean_1_grad/truediv"
  input: "Loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/mul_grad/mul"
  input: "train/gradients/Loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/mul_grad/Sum"
  input: "train/gradients/Loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/mul_1"
  op: "Mul"
  input: "Loss/mul/x"
  input: "train/gradients/Loss/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/mul_grad/mul_1"
  input: "train/gradients/Loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/mul_grad/Sum_1"
  input: "train/gradients/Loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/mul_grad/Reshape"
  input: "^train/gradients/Loss/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/mul_grad/Reshape"
  input: "^train/gradients/Loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/mul_grad/Reshape_1"
  input: "^train/gradients/Loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/add"
  op: "Add"
  input: "Loss/Mean/reduction_indices"
  input: "train/gradients/Loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/mod"
  op: "FloorMod"
  input: "train/gradients/Loss/Mean_grad/add"
  input: "train/gradients/Loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/range"
  op: "Range"
  input: "train/gradients/Loss/Mean_grad/range/start"
  input: "train/gradients/Loss/Mean_grad/Size"
  input: "train/gradients/Loss/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Fill"
  op: "Fill"
  input: "train/gradients/Loss/Mean_grad/Shape_1"
  input: "train/gradients/Loss/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/Loss/Mean_grad/range"
  input: "train/gradients/Loss/Mean_grad/mod"
  input: "train/gradients/Loss/Mean_grad/Shape"
  input: "train/gradients/Loss/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/Loss/Mean_grad/DynamicStitch"
  input: "train/gradients/Loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/Loss/Mean_grad/Shape"
  input: "train/gradients/Loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Loss/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/Loss/Mean_grad/Reshape"
  input: "train/gradients/Loss/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/Loss/Mean_grad/Shape_2"
  input: "train/gradients/Loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/Loss/Mean_grad/Shape_3"
  input: "train/gradients/Loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/Loss/Mean_grad/Prod_1"
  input: "train/gradients/Loss/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/Loss/Mean_grad/Prod"
  input: "train/gradients/Loss/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/Loss/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/Loss/Mean_grad/Tile"
  input: "train/gradients/Loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/add_2_grad/Shape"
  input: "train/gradients/Loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/Mean_grad/truediv"
  input: "train/gradients/Loss/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/add_2_grad/Sum"
  input: "train/gradients/Loss/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/Mean_grad/truediv"
  input: "train/gradients/Loss/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/add_2_grad/Sum_1"
  input: "train/gradients/Loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/add_2_grad/Reshape"
  input: "^train/gradients/Loss/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/add_2_grad/Reshape"
  input: "^train/gradients/Loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/add_2_grad/Reshape_1"
  input: "^train/gradients/Loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/add_1_grad/Shape"
  input: "train/gradients/Loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/add_2_grad/tuple/control_dependency"
  input: "train/gradients/Loss/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/add_1_grad/Sum"
  input: "train/gradients/Loss/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/add_2_grad/tuple/control_dependency"
  input: "train/gradients/Loss/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/add_1_grad/Sum_1"
  input: "train/gradients/Loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/add_1_grad/Reshape"
  input: "^train/gradients/Loss/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/add_1_grad/Reshape"
  input: "^train/gradients/Loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/add_1_grad/Reshape_1"
  input: "^train/gradients/Loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/truediv_1_grad/Shape"
  input: "train/gradients/Loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/Loss/add_2_grad/tuple/control_dependency_1"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/truediv_1_grad/RealDiv"
  input: "train/gradients/Loss/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/truediv_1_grad/Sum"
  input: "train/gradients/Loss/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Neg"
  op: "Neg"
  input: "Loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/Loss/truediv_1_grad/Neg"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/Loss/truediv_1_grad/RealDiv_1"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Loss/add_2_grad/tuple/control_dependency_1"
  input: "train/gradients/Loss/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/truediv_1_grad/mul"
  input: "train/gradients/Loss/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/truediv_1_grad/Sum_1"
  input: "train/gradients/Loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/truediv_1_grad/Reshape"
  input: "^train/gradients/Loss/truediv_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/truediv_1_grad/Reshape"
  input: "^train/gradients/Loss/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/truediv_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/truediv_1_grad/Reshape_1"
  input: "^train/gradients/Loss/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/truediv_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/sub_1_grad/Shape"
  input: "train/gradients/Loss/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/add_1_grad/tuple/control_dependency"
  input: "train/gradients/Loss/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/sub_1_grad/Sum"
  input: "train/gradients/Loss/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/add_1_grad/tuple/control_dependency"
  input: "train/gradients/Loss/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/Loss/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/sub_1_grad/Neg"
  input: "train/gradients/Loss/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/sub_1_grad/Reshape"
  input: "^train/gradients/Loss/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/sub_1_grad/Reshape"
  input: "^train/gradients/Loss/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/sub_1_grad/Reshape_1"
  input: "^train/gradients/Loss/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/truediv_grad/Shape"
  input: "train/gradients/Loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/Loss/add_1_grad/tuple/control_dependency_1"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/truediv_grad/RealDiv"
  input: "train/gradients/Loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/truediv_grad/Sum"
  input: "train/gradients/Loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Neg"
  op: "Neg"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/Loss/truediv_grad/Neg"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/Loss/truediv_grad/RealDiv_1"
  input: "Encoder/covariance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/mul"
  op: "Mul"
  input: "train/gradients/Loss/add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/truediv_grad/mul"
  input: "train/gradients/Loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/truediv_grad/Sum_1"
  input: "train/gradients/Loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/truediv_grad/Reshape"
  input: "^train/gradients/Loss/truediv_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/truediv_grad/Reshape"
  input: "^train/gradients/Loss/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/truediv_grad/Reshape_1"
  input: "^train/gradients/Loss/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Square_grad/mul/x"
  op: "Const"
  input: "^train/gradients/Loss/truediv_1_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Square_grad/mul"
  op: "Mul"
  input: "train/gradients/Loss/Square_grad/mul/x"
  input: "Loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/Square_grad/mul_1"
  op: "Mul"
  input: "train/gradients/Loss/truediv_1_grad/tuple/control_dependency"
  input: "train/gradients/Loss/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/sub_grad/Shape"
  input: "train/gradients/Loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/sub_1_grad/tuple/control_dependency"
  input: "train/gradients/Loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/sub_grad/Sum"
  input: "train/gradients/Loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/sub_1_grad/tuple/control_dependency"
  input: "train/gradients/Loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/sub_grad/Neg"
  input: "train/gradients/Loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/sub_grad/Reshape"
  input: "^train/gradients/Loss/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/sub_grad/Reshape"
  input: "^train/gradients/Loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/sub_grad/Reshape_1"
  input: "^train/gradients/Loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Loss/sub_2_grad/Shape"
  input: "train/gradients/Loss/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Loss/Square_grad/mul_1"
  input: "train/gradients/Loss/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Loss/sub_2_grad/Sum"
  input: "train/gradients/Loss/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Loss/Square_grad/mul_1"
  input: "train/gradients/Loss/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Neg"
  op: "Neg"
  input: "train/gradients/Loss/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Loss/sub_2_grad/Neg"
  input: "train/gradients/Loss/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/sub_2_grad/Reshape"
  input: "^train/gradients/Loss/sub_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Loss/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/sub_2_grad/Reshape"
  input: "^train/gradients/Loss/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Loss/sub_2_grad/Reshape_1"
  input: "^train/gradients/Loss/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Loss/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truediv"
  input: "^train/gradients/Loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Loss/Log_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Loss/sub_grad/tuple/control_dependency_1"
  input: "train/gradients/Loss/Log_1_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Loss/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Loss/sub_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Loss/sub_2_grad/tuple/control_dependency_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/Loss/truediv_grad/tuple/control_dependency"
  input: "train/gradients/Loss/Log_1_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Loss/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/AddN"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/RealDiv"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Neg"
  op: "Neg"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Neg"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/RealDiv_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/mul"
  op: "Mul"
  input: "train/gradients/AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/stack"
  op: "Pack"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tile/multiples"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Rank"
  op: "Rank"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/sub"
  op: "Sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Rank"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Range"
  op: "Range"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Range/start"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Rank"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/sub_1"
  op: "Sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose"
  op: "Transpose"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/stack"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/transpose"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/range"
  op: "Range"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/range/start"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Size"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/truediv_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Reshape_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/zeros_like"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tile_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul/x"
  op: "Const"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul/x"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul_1"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/add_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Square_grad/mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/zeros_like"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_2"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_3"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_3_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_4"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge2"
  input: "train/gradients/AddN_5"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/zeros_like"
  input: "train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_5_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_6_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge2"
  input: "train/gradients/AddN_6"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/zeros_like"
  input: "train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_5_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_7"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_8"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_9"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_9"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_10"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_10"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_11"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge1"
  input: "train/gradients/AddN_11"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/zeros_like"
  input: "train/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_3_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_12"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_4_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge1"
  input: "train/gradients/AddN_12"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/zeros_like"
  input: "train/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_3_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_13"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_13"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_14"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_14"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_15"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_15"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_16"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_1_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_16"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_17"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge0"
  input: "train/gradients/AddN_17"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/edge0"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/zeros_like"
  input: "train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_18"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/mul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/zeros_like"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge0"
  input: "train/gradients/AddN_18"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select_1"
  op: "Select"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/edge0"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/zeros_like"
  input: "train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_19"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_20"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/Select_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_21"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_22"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/AddN_23"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_23"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_24"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_24"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_25"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_26"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_27"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_28"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_2/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_1/candidate/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate_3/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_29"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_30"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_31"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_32"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_33"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_33"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AddN_34"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "train/gradients/AddN_34"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_35"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_36"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/BiasAdd_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_37"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/cell1/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_38"
  op: "AddN"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_2/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_1/gates/MatMul_grad/tuple/control_dependency_1"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/cell2/multi_rnn_cell/cell_0/cell_0/gru_cell/gates_3/gates/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "train/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0006000000284984708
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_w/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_b/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Mean/Output/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Reverse_Encoder/Reverse_Encoder/Covariance/Output/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/projection_b"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_w/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_b/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_w/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_b/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Reverse_Encoder/Reverse_Encoder/Mean/projection_w"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_w/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/projection_b/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^train/Adam/update_Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_w"
  input: "Reverse_Encoder/Reverse_Encoder/Mean/projections/projection_b"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_w"
  input: "Reverse_Encoder/Reverse_Encoder/Covariance/projections/projection_b"
  input: "Decoder/projections/projection_w_1"
  input: "Decoder/projections/projection_b_1"
  input: "Loss/loss"
  input: "Loss/gen_loss"
  input: "Loss/KL_loss"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Encoder/apicalls/sigma/Assign"
  input: "^Encoder/types/sigma/Assign"
  input: "^Encoder/keywords/sigma/Assign"
  input: "^Encoder/mean/apicalls/dense/kernel/Assign"
  input: "^Encoder/mean/apicalls/dense/bias/Assign"
  input: "^Encoder/mean/apicalls/w/Assign"
  input: "^Encoder/mean/apicalls/b/Assign"
  input: "^Encoder/mean/types/dense/kernel/Assign"
  input: "^Encoder/mean/types/dense/bias/Assign"
  input: "^Encoder/mean/types/w/Assign"
  input: "^Encoder/mean/types/b/Assign"
  input: "^Encoder/mean/keywords/dense/kernel/Assign"
  input: "^Encoder/mean/keywords/dense/bias/Assign"
  input: "^Encoder/mean/keywords/w/Assign"
  input: "^Encoder/mean/keywords/b/Assign"
  input: "^Embedding/emb/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^Decoder/lift_w/Assign"
  input: "^Decoder/lift_b/Assign"
  input: "^Decoder/projections/projection_w/Assign"
  input: "^Decoder/projections/projection_b/Assign"
  input: "^Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^Decoder/decoder_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^Decoder/decoder_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/projection_w/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/projection_b/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Mean/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/projection_w/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/projection_b/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell1/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^Reverse_Encoder/Reverse_Encoder/Covariance/Tree_network/rnn/cell2/multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
}
versions {
  producer: 22
}
